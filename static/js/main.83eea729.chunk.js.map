{"version":3,"sources":["App.js","serviceWorker.js","index.js","meetup.svg","slack.svg"],"names":["cards","image","meetup","heading","description","buttons","title","url","slack","App","classes","this","props","react_default","a","createElement","Fragment","CssBaseline_default","AppBar_default","position","className","appBar","Toolbar_default","Typography_default","variant","color","noWrap","heroUnit","heroContent","align","gutterBottom","paragraph","classNames","layout","cardGrid","Grid_default","container","spacing","justify","map","card","item","key","xs","sm","md","lg","Card_default","CardMedia_default","cardMedia","CardContent_default","cardContent","component","CardActions_default","b","Button_default","size","href","fullWidth","src","width","height","frameborder","scrolling","footer","Component","withStyles","theme","icon","marginRight","unit","backgroundColor","palette","background","paper","maxWidth","margin","padding","concat","heroButtons","marginTop","Object","defineProperty","marginLeft","breakpoints","up","display","flexDirection","paddingTop","backgroundSize","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.83eea729.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport meetup from \"./meetup.svg\";\nimport slack from \"./slack.svg\";\nimport classNames from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n    backgroundSize: \"contain\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6\n  }\n});\n\nconst cards = [\n  {\n    image: meetup,\n    heading: \"MissoulaTech Meetup Group\",\n    description:\n      \"Learn more about software development and meet your fellow Missoula tech community members. We aim for roughly monthly in-person meetups.\",\n    buttons: [\n      {\n        title: \"Join MissoulaTech Meetup Group\",\n        url: \"https://www.meetup.com/MissoulaTech/\"\n      }\n    ]\n  },\n  {\n    image: slack,\n    heading: \"MissoulaTech Slack Group\",\n    description:\n      \"Chat online about all issues MissoulaTech in the MissoulaTech Slack workspace.\",\n    buttons: [\n      {\n        title: \"Join MissoulaTech Slack Workspace\",\n        url:\n          \"https://join.slack.com/t/missoulatech/shared_invite/enQtNzg1ODE2Njg1NDI5LWYwYjhlMzM3ZTY0ZDkxMzA1NjBjMTI3MmQyMmQ0ZjllNGNhYTA2M2NkZGFhOWEwM2ExMzFhMTU0MmIwYjkxZDA\"\n      }\n    ]\n  }\n];\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\" noWrap>\n              MissoulaTech\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Typography\n                variant=\"display3\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                MissoulaTech\n              </Typography>\n              <Typography\n                variant=\"title\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                An online community for the Missoula tech community.\n              </Typography>\n              {/* <div className={classes.heroButtons}>\n                <Grid container spacing={16} justify=\"center\">\n                  <Grid item>\n                    <Button variant=\"contained\" color=\"primary\">\n                      Main call to action\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      Secondary action\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div> */}\n            </div>\n          </div>\n          <div className={classNames(classes.layout, classes.cardGrid)}>\n            {/* End hero unit */}\n            <Grid container spacing={40} justify=\"center\">\n              {cards.map(card => (\n                <Grid item key={card.heading} xs={12} sm={6} md={6} lg={6}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={card.image} // eslint-disable-line max-len\n                      title=\"Image title\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography\n                        gutterBottom\n                        variant=\"headline\"\n                        component=\"h2\"\n                      >\n                        {card.heading}\n                      </Typography>\n                      <Typography>{card.description}</Typography>\n                    </CardContent>\n                    <CardActions>\n                      {card.buttons.map(b => {\n                        return (\n                          <Button\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            href={b.url}\n                            fullWidth={true}\n                          >\n                            {b.title}\n                          </Button>\n                        );\n                      })}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n              <Grid item key=\"calendar\" xs={12}>\n                <iframe\n                  src=\"https://calendar.google.com/calendar/embed?src=38m9lgovesqfal473jo9p1a360%40group.calendar.google.com&ctz=America%2FDenver\"\n                  width=\"100%\"\n                  height=\"500px\"\n                  frameborder=\"0\"\n                  scrolling=\"no\"\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </main>\n        <footer className={classes.footer}>\n          <Typography\n            variant=\"subheading\"\n            align=\"center\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            Missoula Tech is moderated by{\" \"}\n            <a href=\"https://twitter.com/lyonwj\">@lyonwj</a> and{\" \"}\n            <a href=\"https://goto10line.net/\">@glesica</a>. Email lyonwj -at-\n            gmail.com with any questions.\n          </Typography>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/meetup.004ada05.svg\";","module.exports = __webpack_public_path__ + \"static/media/slack.92aaef31.svg\";"],"sourceRoot":""}